<Window x:Name="root" x:Class="WpfNotebookProject.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:u="clr-namespace:WpfNotebookProject.Utils"
        mc:Ignorable="d"
        Style="{DynamicResource CustomWindowStyle}"
        BorderBrush="{DynamicResource ControlDefaultBackground}"
        WindowStartupLocation="CenterScreen"
        Title="Notes"
        MinHeight="535"
        MinWidth="875"
        Height="535" 
        Width="875">
    <Window.Resources>
        <DropShadowBitmapEffect x:Key="NormalShadow" ShadowDepth="2" Softness="0.2" Opacity="0.64"/>

        <ControlTemplate x:Key="TabControlTemplate" TargetType="TabControl">
            <Grid  ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="ColumnDefinition0"/>
                    <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                    <RowDefinition x:Name="RowDefinition1" Height="*"/>
                </Grid.RowDefinitions>
                <Grid Panel.ZIndex="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <TabPanel Margin="2,2,2,0" x:Name="HeaderPanel" IsItemsHost="true" KeyboardNavigation.TabIndex="1"/>
                    <Button Grid.Column="1" Padding="5,0" FontWeight="Bold" FontSize="14" Command="{Binding DataContext.NewTabCommand, RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}}">+</Button>
                </Grid>
                <Border x:Name="ContentPanel" Grid.Column="0" Grid.Row="3" BorderBrush="#D0CEBF" BorderThickness="0,0,1,1" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter ContentSource="SelectedContent"/>
                        </Border>
                    </Border>
                </Border>
            </Grid>
        </ControlTemplate>
        <ContextMenu x:Key="TabItemContextMenu">
            <MenuItem Header="Zmień nazwę" Command="{Binding PlacementTarget.Tag.EnableEditSectionTitleCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
            <!--<MenuItem Header="Usuń" Command="{Binding PlacementTarget.Tag.DeleteSectionCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                          CommandParameter="{Binding Path=Header, RelativeSource={RelativeSource AncestorType=TabItem}}"/>-->
            <MenuItem Header="Usuń" Command="{Binding PlacementTarget.Tag.DeleteSectionCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
        </ContextMenu>
    </Window.Resources>
    <Grid Background="{DynamicResource BackgroundColour}">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Menu Grid.Row="0" Grid.Column="0" Padding="4" Background="{DynamicResource BackgroundColour}">
            <MenuItem Header="Plik">
                <MenuItem Header="Nowy notes">
                    <MenuItem.Icon>
                        <Image Source="/WpfNotebookProject;component/Resources/newFile.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                
                <MenuItem Header="Otwórz notes" Click="OpenFileMenuItem_Click">
                    <MenuItem.Icon>
                        <Image Source="/WpfNotebookProject;component/Resources/openFile.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                
                <MenuItem Header="Zapisz notes">
                    <MenuItem.Icon>
                        <Image Source="/WpfNotebookProject;component/Resources/saveFile.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                
                <MenuItem Header="Zapisz notes jako">
                    <MenuItem.Icon>
                        <Image Source="/WpfNotebookProject;component/Resources/saveFileAs.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                
                <MenuItem Header="Opcje - tu nie wiadomo jeszcze">
                    <MenuItem.Icon>
                        <Image Source="/WpfNotebookProject;component/Resources/saveFile.png"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="Motyw">
                <MenuItem Header="Jasny" Click="ChangeTheme" Uid="0">
                    <MenuItem.Icon>
                        <Rectangle Stroke="#FF848484" Fill="#FFE8E8E8" StrokeThickness="2" StrokeLineJoin="Round" BitmapEffect="{StaticResource NormalShadow}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Jasny z kolorem" Click="ChangeTheme" Uid="1">
                    <MenuItem.Icon>
                        <Rectangle Stroke="#FF2C7FF5" Fill="#FFE8E8E8" StrokeThickness="2" StrokeLineJoin="Round" BitmapEffect="{StaticResource NormalShadow}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Ciemny" Click="ChangeTheme" Uid="2">
                    <MenuItem.Icon>
                        <Rectangle Stroke="#FF404040" Fill="#FF1B1B1B" StrokeThickness="2" StrokeLineJoin="Round" BitmapEffect="{StaticResource NormalShadow}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Ciemny z kolorem" Click="ChangeTheme" Uid="3">
                    <MenuItem.Icon>
                        <Rectangle Stroke="#FF2C7FF5" Fill="#FF1B1B1B" StrokeThickness="2" StrokeLineJoin="Round" BitmapEffect="{StaticResource NormalShadow}" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
           
        </Menu>
        <Grid Grid.Row="0" Grid.Column="1" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <TextBox Grid.Column="0" Padding="4" Text="Wyszukaj..."></TextBox>
            <Button Grid.Column="1" Content="Wyszukaj" Height="26" VerticalAlignment="Top"></Button>
        </Grid>

       
            <DockPanel Grid.Row="1" Grid.ColumnSpan="2"  Background="{DynamicResource BackgroundColour}">
                <Button  ToolTip="Nowy notes" 
                                BorderBrush="Transparent" Background="Transparent" VerticalAlignment="Center"
                                Focusable="False" Width="28" Height="28" Margin="0 0 2 0"
                         Command="{Binding NewNotebookCommand, Mode=OneTime}">
                    <Button.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Duration="0:0:0.1" To="32" Storyboard.TargetProperty="Width" />
                                    <DoubleAnimation Duration="0:0:0.1" To="32" Storyboard.TargetProperty="Height" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Duration="0:0:0.1" To="28" Storyboard.TargetProperty="Width" />
                                    <DoubleAnimation Duration="0:0:0.1" To="28" Storyboard.TargetProperty="Height" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Button.Triggers>
                    <Image Margin="1" Source="/Resources/newFile.png"/>
                </Button>

                <Button ToolTip="Otwórz notes"
                                BorderBrush="Transparent" Background="Transparent" 
                                Focusable="False" Width="28" Margin="0 0 2 0"
                        Command="{Binding OpenNotebookCommand, Mode=OneTime}">
                    <Image Margin="1" Source="/Resources/openFile.png"/>
                </Button>

                <StackPanel IsEnabled="{Binding NotepadAvaliable, UpdateSourceTrigger=PropertyChanged}" Orientation="Horizontal">
                    <!--<Button Command="{Binding SaveCommand, Mode=OneTime}" ToolTip="Zapisz notes" 
                                    BorderBrush="Transparent"  VerticalAlignment="Center"
                                    Background="Transparent" Focusable="False"
                                    Width="28" Height="28" Margin="0 0 2 0">-->
                <Button Command="{Binding SaveNotebookCommand, Mode=OneTime}"
                                    ToolTip="Zapisz notes" 
                                    BorderBrush="Transparent"  VerticalAlignment="Center"
                                    Background="Transparent" Focusable="False"
                                    Width="28" Height="28" Margin="0 0 2 0">
                    <Button.Triggers>
                            <EventTrigger RoutedEvent="MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.1" To="32" Storyboard.TargetProperty="Width" />
                                        <DoubleAnimation Duration="0:0:0.1" To="32" Storyboard.TargetProperty="Height" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.1" To="28" Storyboard.TargetProperty="Width" />
                                        <DoubleAnimation Duration="0:0:0.1" To="28" Storyboard.TargetProperty="Height" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Button.Triggers>
                        <Image Margin="1" Source="/Resources/saveFile.png"/>
                    </Button>

                <Button Command="{Binding SaveNotebookAsCommand, Mode=OneTime}" ToolTip="Zapisz notes jako..." 
                                    BorderBrush="Transparent" Background="Transparent" Width="28"
                                    Focusable="False" Margin="0 0 2 0">
                        <Image Margin="1" Source="/Resources/saveFileAs.png"/>
                    </Button>
                    <Button Command="{Binding CloseSelectedNotepadCommand, Mode=OneTime}" ToolTip="Zamknij obecny notes i usuń go" 
                                    BorderBrush="Transparent" Background="Transparent" 
                                    Focusable="False" Width="28" Margin="0 0 2 0">
                        <Image Margin="1" Source="/Resources/closeFile.png"/>
                    </Button>
                    <Button Command="{Binding PrintFileCommand, Mode=OneTime}" IsEnabled="True" 
                                    BorderBrush="Transparent" Background="Transparent"
                                    ToolTip="Drukuj tekst" Width="32" Margin="0">
                        <Image Margin="1" Source="/Resources/printIcon.png"/>
                    </Button>
                </StackPanel>

            </DockPanel>
        







        <ToolBar Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" FontStyle="Normal" >
            <ToggleButton Command="EditingCommands.ToggleBold" Name="btnBold" >
                <TextBlock Padding="4" FontSize="22" FontWeight="Bold" FontFamily="Consolas"  >B</TextBlock>
            </ToggleButton>

            <ToggleButton Command="EditingCommands.ToggleItalic" Name="btnItalic" FontFamily="Arial" >
                <TextBlock Padding="4" FontSize="22"  FontFamily="Consolas" FontStyle="Italic" FontWeight="Normal"  >I</TextBlock>
            </ToggleButton>

            <ToggleButton Command="EditingCommands.ToggleUnderline" Name="btnUnderline">
                <TextBlock Padding="4" FontSize="22" FontWeight="Normal" FontFamily="Consolas" TextDecorations="Underline"  >U</TextBlock>
            </ToggleButton>

            <ComboBox Height="25" Foreground="{DynamicResource ControlDefaultForeground}" Background="{DynamicResource BackgroundColour}" Name="cmbFontFamily" SelectionChanged="cmbFontFamily_SelectionChanged"  Padding="20,0"  />
            <ComboBox Height="25" 
                      Foreground="{DynamicResource ControlDefaultForeground}" 
                      Background="{DynamicResource BackgroundColour}"  
                      Name="cmbFontSize" 
                      Padding="12,0"  
                      IsEditable="True" 
                      ToolTip="Font Size"
                      TextBoxBase.TextChanged="cmbFontSize_TextChanged"/>

        </ToolBar>

        <TabControl x:Name="SectionsTabControl" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Template="{StaticResource TabControlTemplate}"
                    ItemsSource="{Binding OpenSections}" 
                    SelectedItem="{Binding ActualSection}" FontFamily="Arial" IsSynchronizedWithCurrentItem="True">
            <TabControl.ItemTemplate>
                <DataTemplate>
                    <StackPanel >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="LostFocus">
                                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor},
                                                    Path=DataContext.DisableEditSectionTitleCommand }"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <!--<StackPanel.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Zmień nazwę" Command="{Binding PlacementTarget.Tag.EnableEditSectionTitleCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                                <MenuItem Header="Usuń" Command="{Binding PlacementTarget.Tag.DeleteSectionCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                          CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=TabItem}}"/>
                            </ContextMenu>
                        </StackPanel.ContextMenu>-->
                        <TextBlock x:Name="TitleTextBlock" Text="{Binding Title}" Tag="{Binding DataContext, ElementName=root}">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type TabItem}}, 
                                                            Path=IsSelected}" Value="True">
                                            <Setter Property="Visibility" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, 
                                                                Path=DataContext.SectionTitleTextBlockVisibility }"/>
                                            <Setter Property="ContextMenu" Value="{StaticResource TabItemContextMenu}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type TabItem}},
                                                            Path=IsSelected}" Value="False">
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBox x:Name="TitleTextBox" Text="{Binding Title}">
                            <TextBox.Style>
                                <Style TargetType="{x:Type TextBox}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type TabItem}},
                                                            Path=IsSelected}" Value="True">
                                            <Setter Property="Visibility" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor},
                                                                Path=DataContext.SectionTitleTextBoxVisibility }"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type TabItem}}, 
                                                            Path=IsSelected}" Value="False">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Visibility}" Value="Visible">
                                            <Setter Property="FocusManager.FocusedElement" Value="{Binding RelativeSource={RelativeSource Mode=Self}}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="GotFocus">
                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor},
                                                        Path=DataContext.SelectAllTextCommand }"
                                                        CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=TextBox}}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                    </StackPanel>
                </DataTemplate>
            </TabControl.ItemTemplate>
            <TabControl.ContentTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="200"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <ListBox x:Name="NotesListBox" Grid.Column="0" 
                                 ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.OpenNotes }"
                                 SelectedItem="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.OpenNote }">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Tag="{Binding DataContext, ElementName=root}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="LostFocus">
                                                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor},
                                                    Path=DataContext.DisableEditNoteTitleCommand }"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        <StackPanel.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="Zmień nazwę" Command="{Binding PlacementTarget.Tag.EnableEditNoteTitleCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                                                <MenuItem Header="Usuń" Command="{Binding PlacementTarget.Tag.DeleteNoteCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                                          CommandParameter="{Binding PlacementTarget.Tag.OpenNote, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                                            </ContextMenu>
                                        </StackPanel.ContextMenu>
                                        <TextBlock x:Name="TitleTextBlock" Text="{Binding Title}">
                                            <TextBlock.Style>
                                                <Style TargetType="{x:Type TextBlock}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}}, 
                                                            Path=IsSelected}" Value="True">
                                                            <Setter Property="Visibility" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, 
                                                                Path=DataContext.NoteTitleTextBlockVisibility }"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},
                                                            Path=IsSelected}" Value="False">
                                                            <Setter Property="Visibility" Value="Visible"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                        <TextBox x:Name="TitleTextBox" Text="{Binding Title}">
                                            <TextBox.Style>
                                                <Style TargetType="{x:Type TextBox}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}},
                                                            Path=IsSelected}" Value="True">
                                                            <Setter Property="Visibility" Value="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor},
                                                                Path=DataContext.NoteTitleTextBoxVisibility }"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}}, 
                                                            Path=IsSelected}" Value="False">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Visibility}" Value="Visible">
                                                            <Setter Property="FocusManager.FocusedElement" Value="{Binding RelativeSource={RelativeSource Mode=Self}}"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBox.Style>
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="GotFocus">
                                                    <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor},
                                                        Path=DataContext.SelectAllTextCommand }"
                                                        CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=TextBox}}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </TextBox>
                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                        <Button Grid.Row="1" Grid.Column="0" Content="Dodaj notatkę" Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.AddNewNoteCommand }"
                                CommandParameter="{Binding ElementName=SectionsTabControl, Path=SelectedItem}"/>
                        <RichTextBox Foreground="{DynamicResource ControlDefaultForeground}" Background="{DynamicResource BackgroundColour}" Name="tbEditor" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" SelectionChanged="tbEditor_SelectionChanged"   AcceptsReturn="True" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Visible"
                                     u:RichTextBoxHelper.DocumentXaml="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.NoteText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FontFamily="Arial">
                        </RichTextBox>
                    </Grid>
                </DataTemplate>
            </TabControl.ContentTemplate>
        </TabControl>
    </Grid>
</Window>
